name: publish

on:
  workflow_dispatch:
  push:
    branches:    
      - master
    paths:
      - package.json
      - .github/workflows/publish.yaml


env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHA_BOT_GIT_NAME: github-actions[bot]
  GHA_BOT_GIT_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: write
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: write
  statuses: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Fetch tag
        id: tag
        run: |
          echo "TAG=v$(npm pkg get version --json | jq -r)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: Test if the branch exist
        id: testIfExist
        run: |
          if gh api repos/${{ github.repository }}/branches/production/${{ steps.tag.outputs.TAG }} >/dev/null 2>&1; then
            echo "EXIST=true" >> $GITHUB_OUTPUT
          else
            echo "EXIST=false" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT

      - name: Use Node.js
        if: steps.testIfExist.outputs.EXIST == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          check-latest: true
          cache: npm

      - name: Installing the dependencies
        if: steps.testIfExist.outputs.EXIST == 'false'
        uses: AnnAngela/cached_node-modules@v2

      - name: Get major tag
        if: steps.testIfExist.outputs.EXIST == 'false'
        id: tagMajor
        run: |
          echo "TAG_MAJOR=v$(node -e 'console.info(require(`semver/functions/major`)(`${{ steps.tag.outputs.TAG }}`))')" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Check environment
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: npx eslint --env-info
      - name: Run eslint
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: npm run lint:check-ci

      - name: Prepare Git
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: |
          git config --global user.email $GHA_BOT_GIT_EMAIL
          git config --global user.name $GHA_BOT_GIT_NAME
          git config --global author.email $GHA_BOT_GIT_EMAIL
          git config --global author.name $GHA_BOT_GIT_NAME
          git config --global committer.email $GHA_BOT_GIT_EMAIL
          git config --global committer.name $GHA_BOT_GIT_NAME
          git config --global push.autoSetupRemote true
          echo "!dist" >> .gitignore
      - name: Create new branch
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: |
          git checkout -b production/${{ steps.tag.outputs.TAG }}
          git push origin production/${{ steps.tag.outputs.TAG }}
      - name: Run package
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: |
          npm run package
          git add .
          git commit -am "feat: package ${{ steps.tag.outputs.TAG }}"
      - name: Delete old major tag
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: |
          gh api --method DELETE -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" repos/${{ github.repository }}/git/refs/tags/${{ steps.tagMajor.outputs.TAG_MAJOR }}
      - name: Make tag
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: |
          git tag -m "release: ${{ steps.tag.outputs.TAG }}" ${{ steps.tag.outputs.TAG }}
          git tag ${{ steps.tagMajor.outputs.TAG_MAJOR }} ${{ steps.tag.outputs.TAG }}
      - name: Push new tag
        if: steps.testIfExist.outputs.EXIST == 'false'
        run: |
          git push -f --follow-tags
